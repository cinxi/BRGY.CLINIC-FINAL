<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Staff Calendar-view</title>
    <!-- Linking Google Font Link For Icons -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Icons" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="/css/staff/dashboard.css">
</head>
<body>
    <div class="header">
        <div class="user-account">
            <div class="user-profile">
                <img src="/image/profile-img.png" alt="profile-img">
                <div class="user-detail">
                    <h3><%= staff.FirstName %> <%= staff.LastName %></h3>
                    <span>Clinic Staff</span>
                </div>
            </div>
        </div>
    </div>
    

    <aside class="sidebar">
        <div class="sidebar-header">
            <img src="/image/brgy-logo.png" alt="logo">
            <h3>Brgy. Clinic Appointment</h3>
        </div>
        <ul class="sidebar-links">
            <li><a href="Staffdashboard"><span class="material-icons">dashboard</span>Calendar</a></li>
            <li><a href="appointment"><span class="material-icons">today</span>Appointments</a></li>
            <li><a href="patients"><span class="material-icons">groups</span>Patients Record</a></li>
            <li><a href="logs"><span class="material-symbols-outlined">  pending_actions </span>Logs</a></li>
            <li><a href="login"><span class="material-icons">logout</span>Logout</a></li>
        </ul>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
        <div class="sticky-header">
            <h4>Existing Appointments</h4>
        </div>
        <div class="calendar-container">
            <div class="calendar-header">
                <button id="prev-month">&lt;</button>
                <h3 id="calendar-title">December</h3>
                <button id="next-month">&gt;</button>
            </div>
            <div class="calendar-grid" id="calendar-grid"></div>
        </div>
  

    <!-- Add Modal for Appointment Details -->
<div id="appointment-modal" class="modal">
    <div class="modal-content">
        <span id="close-modal" class="close">&times;</span>
        <h3>Patient Details</h3>
        <div id="appointment-details"></div>
    </div>
</div>


</main>



<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Existing Variables and Functions
        let currentMonth = new Date().getMonth();
        let currentYear = new Date().getFullYear();
        const calendarGrid = document.getElementById("calendar-grid");
        const calendarTitle = document.getElementById("calendar-title");
        const prevMonthButton = document.getElementById("prev-month");
        const nextMonthButton = document.getElementById("next-month");

        // Modal Elements
        const modal = document.getElementById("appointment-modal");
        const closeModal = document.getElementById("close-modal");
        const appointmentDetails = document.getElementById("appointment-details");

        closeModal.addEventListener("click", () => {
            modal.style.display = "none";
        });

        // Fetch appointments
        const fetchAppointments = () => {
            return fetch('/api/approved-appointments')
                .then(response => response.json())
                .catch(error => {
                    console.error("Error fetching appointments:", error);
                    return [];
                });
        };

        // Render calendar with click functionality
        const renderCalendar = async () => {
            const appointments = await fetchAppointments();
            const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
            const firstDayOfWeek = new Date(currentYear, currentMonth, 1).getDay();
            const monthNames = [
                "January", "February", "March", "April", "May", "June",
                "July", "August", "September", "October", "November", "December"
            ];
            calendarTitle.textContent = `${monthNames[currentMonth]} ${currentYear}`;
            calendarGrid.innerHTML = "";

            // Day Headers
            const dayHeaders = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
            dayHeaders.forEach(day => {
                const header = document.createElement("div");
                header.classList.add("calendar-cell", "day-header");
                header.textContent = day;
                calendarGrid.appendChild(header);
            });

            // Blank Cells
            for (let i = 0; i < firstDayOfWeek; i++) {
                const blankCell = document.createElement("div");
                blankCell.classList.add("calendar-cell");
                calendarGrid.appendChild(blankCell);
            }

            // Calendar Cells
            for (let day = 1; day <= daysInMonth; day++) {
                const date = `${currentYear}-${String(currentMonth + 1).padStart(2, "0")}-${String(day).padStart(2, "0")}`;
                const dayAppointments = appointments.filter(app => app.date === date);
                const cell = document.createElement("div");
                cell.classList.add("calendar-cell");
                cell.innerHTML = `<strong>${day}</strong>`;

                if (dayAppointments.length > 0) {
                    const detailsContainer = document.createElement("div");
                    detailsContainer.classList.add("appointment-details");
                    detailsContainer.textContent = `${dayAppointments.length} Appointment`;

                    cell.appendChild(detailsContainer);
                    cell.addEventListener("click", () => showAppointments(dayAppointments));
                }

                calendarGrid.appendChild(cell);
            }
        };

        // Show appointments in the modal
        const showAppointments = (appointments) => {
            appointmentDetails.innerHTML = "";
            if (appointments.length > 0) {
                appointments.forEach(app => {
                    const detail = document.createElement("p");
                    detail.innerHTML = `
                        <strong>${app.patientName}</strong><br>
                        Purpose: ${app.purpose}<br>
                        Time: ${formatTime12Hour(app.time)}<br>
                        Contact: ${app.contact}
                    `;
                    appointmentDetails.appendChild(detail);
                });
            } else {
                appointmentDetails.innerHTML = "<p>No appointments available for this date.</p>";
            }
            modal.style.display = "block";
        };

        // Format time to 12-hour
        const formatTime12Hour = (time24) => {
            let [hours, minutes] = time24.split(':');
            hours = parseInt(hours, 10);
            const ampm = hours >= 12 ? 'PM' : 'AM';
            hours = hours % 12;
            hours = hours ? hours : 12;
            minutes = minutes.padStart(2, '0');
            return `${hours}:${minutes} ${ampm}`;
        };

        // Handle Navigation
        prevMonthButton.addEventListener("click", () => {
            currentMonth -= 1;
            if (currentMonth < 0) {
                currentMonth = 11;
                currentYear -= 1;
            }
            renderCalendar();
        });

        nextMonthButton.addEventListener("click", () => {
            currentMonth += 1;
            if (currentMonth > 11) {
                currentMonth = 0;
                currentYear += 1;
            }
            renderCalendar();
        });

        renderCalendar();
    });
</script>

</body>
</html>
